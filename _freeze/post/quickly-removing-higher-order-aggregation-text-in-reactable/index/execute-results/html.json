{
  "hash": "e88ba604f0a3547dd088b7d916778c16",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Removing higher-order aggregation text in {reactable}\"\nauthor: \"Alex Zajichek\"\ndate: \"6/29/2023\"\nimage: \"feature.png\"\ncategories:\n  - Tables\n  - Javascript\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n---\n\n\n\nOften when I'm building a [`reactable`](https://glin.github.io/reactable/) I have potentially many aggregation levels but only want to display data in a lower subset of those. Here is a quick way to eliminate text using cell styling. \n\nFirst let's load some packages and look at an example data set.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(reactable)\ndat <- cheese::heart_disease\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 303 × 9\n     Age Sex    ChestPain           BP Cholesterol BloodSugar MaximumHR\n   <dbl> <fct>  <fct>            <dbl>       <dbl> <lgl>          <dbl>\n 1    63 Male   Typical angina     145         233 TRUE             150\n 2    67 Male   Asymptomatic       160         286 FALSE            108\n 3    67 Male   Asymptomatic       120         229 FALSE            129\n 4    37 Male   Non-anginal pain   130         250 FALSE            187\n 5    41 Female Atypical angina    130         204 FALSE            172\n 6    56 Male   Atypical angina    120         236 FALSE            178\n 7    62 Female Asymptomatic       140         268 FALSE            160\n 8    57 Female Asymptomatic       120         354 FALSE            163\n 9    63 Male   Asymptomatic       130         254 FALSE            147\n10    53 Male   Asymptomatic       140         203 TRUE             155\n# ℹ 293 more rows\n# ℹ 2 more variables: ExerciseInducedAngina <fct>, HeartDisease <fct>\n```\n\n\n:::\n:::\n\n\n\nSuppose we are interested in these outcomes: \n\n1. The rate of heart disease\n2. The rate of patients with a maximum heart rate > 150 \n\nAnd we want to summarize those, along with a few other patient characteristics, within a handful of important clinical factors. We might pivot our data into a long format to start:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_dat <-\n  dat |> \n  \n  # Convert to character types\n  mutate(\n    across(\n      c(ChestPain, ExerciseInducedAngina, BloodSugar),\n      as.character\n    ),\n    MaximumHR =\n      case_when(\n        MaximumHR > 150 ~ \"Yes\",\n        TRUE ~ \"No\"\n      )\n  ) |>\n  \n  # Send \"important clinical factors\" down the rows\n  pivot_longer(\n    cols = c(ChestPain, ExerciseInducedAngina, BloodSugar),\n    names_to = \"ClinicalFactor\",\n    values_to = \"Level\"\n  ) |> \n  \n  # Send outcomes down the rows\n  pivot_longer(\n    cols = c(HeartDisease, MaximumHR),\n    names_to = \"Outcome\",\n    values_to = \"HasOutcome\"\n  )\npivot_dat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,818 × 8\n     Age Sex      BP Cholesterol ClinicalFactor        Level  Outcome HasOutcome\n   <dbl> <fct> <dbl>       <dbl> <chr>                 <chr>  <chr>   <chr>     \n 1    63 Male    145         233 ChestPain             Typic… HeartD… No        \n 2    63 Male    145         233 ChestPain             Typic… Maximu… No        \n 3    63 Male    145         233 ExerciseInducedAngina No     HeartD… No        \n 4    63 Male    145         233 ExerciseInducedAngina No     Maximu… No        \n 5    63 Male    145         233 BloodSugar            TRUE   HeartD… No        \n 6    63 Male    145         233 BloodSugar            TRUE   Maximu… No        \n 7    67 Male    160         286 ChestPain             Asymp… HeartD… Yes       \n 8    67 Male    160         286 ChestPain             Asymp… Maximu… No        \n 9    67 Male    160         286 ExerciseInducedAngina Yes    HeartD… Yes       \n10    67 Male    160         286 ExerciseInducedAngina Yes    Maximu… No        \n# ℹ 1,808 more rows\n```\n\n\n:::\n:::\n\n\n\nWe can then calculate some summary statistics. Our full patient population is replicated for each `ClinicalFactor` and `Outcome`, so we should account for that.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_dat <-\n  pivot_dat |> \n  \n  # Summarize characteristics\n  summarize(\n    Patients = n(),\n    OutcomeRate = mean(HasOutcome == \"Yes\"),\n    Age = mean(Age),\n    Female = mean(Sex == \"Female\"),\n    .by = \n      c(\n        ClinicalFactor,\n        Level,\n        Outcome,\n        HasOutcome\n      )\n  ) |> \n  \n  # Add counts within groups\n  mutate(\n    PercentOfPatients = Patients / sum(Patients),\n    .by = c(ClinicalFactor, Outcome)\n  ) |> \n  \n  # Make clean levels/labels\n  mutate(\n    ClinicalFactor = \n      case_when(\n        ClinicalFactor == \"BloodSugar\" ~ \"Blood sugar > 120 mg/dl?\",\n        ClinicalFactor == \"ChestPain\" ~ \"Chest pain type\",\n        ClinicalFactor == \"ExerciseInducedAngina\" ~ \"Exercise-induced angina?\"\n      ),\n    Level = \n      case_when(\n        Level == \"TRUE\" ~ \"Yes\",\n        Level == \"FALSE\" ~ \"No\",\n        TRUE ~ Level\n      ),\n    Outcome = \n      case_when(\n        Outcome == \"HeartDisease\" ~ \"Heart disease\",\n        Outcome == \"MaximumHR\" ~ \"Maximum HR > 150\"\n      )\n  ) |>\n  \n  # Rearrange\n  relocate(PercentOfPatients, .after = Patients) |>\n  relocate(Outcome, .before = everything()) |>\n  arrange(\n    Outcome,\n    ClinicalFactor,\n    Level,\n    HasOutcome\n  )\nsummary_dat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 32 × 9\n   Outcome       ClinicalFactor      Level HasOutcome Patients PercentOfPatients\n   <chr>         <chr>               <chr> <chr>         <int>             <dbl>\n 1 Heart disease Blood sugar > 120 … No    No              141            0.465 \n 2 Heart disease Blood sugar > 120 … No    Yes             117            0.386 \n 3 Heart disease Blood sugar > 120 … Yes   No               23            0.0759\n 4 Heart disease Blood sugar > 120 … Yes   Yes              22            0.0726\n 5 Heart disease Chest pain type     Asym… No               39            0.129 \n 6 Heart disease Chest pain type     Asym… Yes             105            0.347 \n 7 Heart disease Chest pain type     Atyp… No               41            0.135 \n 8 Heart disease Chest pain type     Atyp… Yes               9            0.0297\n 9 Heart disease Chest pain type     Non-… No               68            0.224 \n10 Heart disease Chest pain type     Non-… Yes              18            0.0594\n# ℹ 22 more rows\n# ℹ 3 more variables: OutcomeRate <dbl>, Age <dbl>, Female <dbl>\n```\n\n\n:::\n:::\n\n\n\nNow we're ready to build the table (note the use of the [`zildge::rectbl_agg_wtd()`](https://github.com/zajichek/zildge/blob/main/R/rectbl_agg_wtd.R) function to compute the weighted average, see [my other post](https://www.zajichekstats.com/post/reactable-javascript/) for more information about this).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data = summary_dat,\n  groupBy = c(\"Outcome\", \"ClinicalFactor\", \"Level\"),\n  columns = \n    list(\n      ClinicalFactor = colDef(name = \"Clinical factor\"),\n      HasOutcome = colDef(name = \"Has Outcome?\"),\n      Patients = colDef(name = \"Count\", aggregate = \"sum\", align = \"center\"),\n      PercentOfPatients = colDef(name = \"Percent\", aggregate = \"sum\", align = \"center\", format = colFormat(digits = 2, percent = TRUE)),\n      OutcomeRate = colDef(name = \"Outcome rate (%)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2, percent = TRUE)),\n      Age = colDef(name = \"Avg. age (years)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2)),\n      Female = colDef(name = \"Female (%)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2, percent = TRUE))\n    ),\n  columnGroups = \n    list(\n      colGroup(\n        name = \"Patients\",\n        columns = c(\"Patients\", \"PercentOfPatients\")\n      )\n    ),\n  striped = TRUE,\n  highlight = TRUE,\n  bordered = TRUE,\n  resizable = TRUE,\n  theme = reactablefmtr::sandstone()\n) |>\n  reactablefmtr::add_source(\"Use arrows to expand table\", font_size = 12, font_style = \"italic\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-7dee0434196488165b3c\" style=\"width:auto;height:auto;\"></div>\n<p style=\"color:#000;background:#FFFFFF;text-align:left;font-size:12px;font-style:italic;font-weight:normal;text-decoration:;letter-spacing:px;word-spacing:px;text-transform:;text-shadow:;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">Use arrows to expand table</p>\n<script type=\"application/json\" data-for=\"htmlwidget-7dee0434196488165b3c\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Outcome\":[\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\"],\"ClinicalFactor\":[\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\"],\"Level\":[\"No\",\"No\",\"Yes\",\"Yes\",\"Asymptomatic\",\"Asymptomatic\",\"Atypical angina\",\"Atypical angina\",\"Non-anginal pain\",\"Non-anginal pain\",\"Typical angina\",\"Typical angina\",\"No\",\"No\",\"Yes\",\"Yes\",\"No\",\"No\",\"Yes\",\"Yes\",\"Asymptomatic\",\"Asymptomatic\",\"Atypical angina\",\"Atypical angina\",\"Non-anginal pain\",\"Non-anginal pain\",\"Typical angina\",\"Typical angina\",\"No\",\"No\",\"Yes\",\"Yes\"],\"HasOutcome\":[\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\"],\"Patients\":[141,117,23,22,39,105,41,9,68,18,16,7,141,63,23,76,117,141,22,23,92,52,9,41,29,57,9,14,66,138,73,26],\"PercentOfPatients\":[0.465346534653465,0.386138613861386,0.0759075907590759,0.0726072607260726,0.128712871287129,0.346534653465347,0.135313531353135,0.0297029702970297,0.224422442244224,0.0594059405940594,0.0528052805280528,0.0231023102310231,0.465346534653465,0.207920792079208,0.0759075907590759,0.250825082508251,0.386138613861386,0.465346534653465,0.0726072607260726,0.0759075907590759,0.303630363036304,0.171617161716172,0.0297029702970297,0.135313531353135,0.0957095709570957,0.188118811881188,0.0297029702970297,0.0462046204620462,0.217821782178218,0.455445544554455,0.240924092409241,0.0858085808580858],\"OutcomeRate\":[0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],\"Age\":[52,56.3931623931624,56.1739130434783,57.8636363636364,54.0769230769231,56.3333333333333,50.0243902439024,57.4444444444444,52.4264705882353,58.5,56.1875,55.1428571428571,52.4184397163121,57.0952380952381,53.6086956521739,56.2368421052632,57.0769230769231,51.4326241134752,58.6363636363636,55.4347826086956,56.6086956521739,54.1538461538462,59.4444444444444,49.5853658536585,58.2068965517241,51.4035087719298,59.6666666666667,53.4285714285714,58.2121212121212,51.7826086956522,56.5205479452055,53.1153846153846],\"Female\":[0.468085106382979,0.162393162393162,0.260869565217391,0.272727272727273,0.461538461538462,0.20952380952381,0.390243902439024,0.222222222222222,0.5,0.0555555555555556,0.25,0,0.453900709219858,0.174603174603175,0.347826086956522,0.184210526315789,0.256410256410256,0.390070921985816,0.272727272727273,0.260869565217391,0.228260869565217,0.365384615384615,0.222222222222222,0.390243902439024,0.413793103448276,0.403508771929825,0.111111111111111,0.214285714285714,0.363636363636364,0.369565217391304,0.164383561643836,0.384615384615385]},\"columns\":[{\"id\":\"Outcome\",\"name\":\"Outcome\",\"type\":\"character\"},{\"id\":\"ClinicalFactor\",\"name\":\"Clinical factor\",\"type\":\"character\"},{\"id\":\"Level\",\"name\":\"Level\",\"type\":\"character\"},{\"id\":\"HasOutcome\",\"name\":\"Has Outcome?\",\"type\":\"character\"},{\"id\":\"Patients\",\"name\":\"Count\",\"type\":\"numeric\",\"aggregate\":\"sum\",\"align\":\"center\"},{\"id\":\"PercentOfPatients\",\"name\":\"Percent\",\"type\":\"numeric\",\"aggregate\":\"sum\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\"},{\"id\":\"OutcomeRate\",\"name\":\"Outcome rate (%)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\"},{\"id\":\"Age\",\"name\":\"Avg. age (years)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2},\"aggregated\":{\"digits\":2}},\"align\":\"center\"},{\"id\":\"Female\",\"name\":\"Female (%)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\"}],\"columnGroups\":[{\"name\":\"Patients\",\"columns\":[\"Patients\",\"PercentOfPatients\"]}],\"groupBy\":[\"Outcome\",\"ClinicalFactor\",\"Level\"],\"resizable\":true,\"highlight\":true,\"bordered\":true,\"striped\":true,\"theme\":{\"color\":\"#3e3f3a\",\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#f8f5f0\",\"borderWidth\":\"1px\",\"stripedColor\":\"#ededed\",\"highlightColor\":\"#f8f5f0\",\"cellPadding\":6,\"tableStyle\":{\"fontSize\":15},\"headerStyle\":{\"borderWidth\":\"2px\",\"backgroundColor\":\"#f8f5f0\",\"color\":\"#7c7a78\",\"transitionDuration\":\"0.5s\",\"&:hover[aria-sort]\":{\"color\":\"#000000\"},\"&[aria-sort='ascending'], &[aria-sort='descending']\":{\"color\":\"#000000\"},\"fontSize\":16},\"groupHeaderStyle\":{\"&:not(:empty)\":{\"color\":\"#3e3f3a\",\"fontSize\":16},\"&:hover\":{\"fontWeight\":\"bold\",\"transitionDuration\":\"1s\",\"transitionTimingFunction\":\"ease-out\",\"color\":\"#000000\"}},\"rowSelectedStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"inputStyle\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#bcbfc1\",\"color\":\"#3e3f3a\"},\"searchInputStyle\":{\"backgroundColor\":\"#ffffff\",\"color\":\"#3e3f3a\",\"borderColor\":\"#bcbfc1\",\"&:focus\":{\"color\":\"#3e3f3a\"}},\"selectStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\",\"borderColor\":\"#ffffff\",\"outlineColor\":\"#ffffff\"},\"pageButtonStyle\":{\"backgroundColor\":\"#f8f5f0\",\"color\":\"#8e8c84\",\"&:hover\":{\"backgroundColor\":\"#f3969a\",\"color\":\"#8e8c84\"}},\"pageButtonHoverStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"pageButtonActiveStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"pageButtonCurrentStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"}},\"dataKey\":\"c12689269c1e419783d332983d8fb3c2\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.attribs.columns.6.aggregate\",\"tag.attribs.columns.7.aggregate\",\"tag.attribs.columns.8.aggregate\"],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n<br>\n\nThere are a few problems with this table:\n\n1. The redundancy of the top-level (and second-level) summary statistics is unappealing\n2. The top-level aggregation is just flat-out wrong because we've duplicated counts over the data set\n\nMaybe _1_ is not a huge deal, but I've probably already established somewhere that there are 303 patients in the data set and the overall rate of heart disease is 45.9%. You still may choose to keep it as-is in this case as it's not totally harmful. However, _2_ needs to be addressed as the data is misleading and not really interpretable. __So how can we remove the results from (at least) the top-level while maintaining the lower-level aggregation?__\n\nWe can define an `R` function that provides JavaScript [custom styling](https://glin.github.io/reactable/articles/conditional-styling.html) to a cell.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremove_text <-\n  function(col, threshold) {\n    JS(\n      paste0(\n        \"function(rowInfo) {\n          if(rowInfo.row['\", col, \"'] > \", threshold, \") {\n            return {fontSize:0}\n          }\n        }\"\n      )\n    )\n  }\n```\n:::\n\n\n\nAll this function does is reduce the font size to zero for any cell where the value of `col` in the respective row is greater than `threshold`. Thus, since we are over-counting the number of patients in the top-level, we can just apply this function to rows in which the count exceeds 303, which is the patient count in our data set. We provide this function to the `style` argument of `colDef()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data = summary_dat,\n  groupBy = c(\"Outcome\", \"ClinicalFactor\", \"Level\"),\n  columns = \n    list(\n      ClinicalFactor = colDef(name = \"Clinical factor\"),\n      HasOutcome = colDef(name = \"Has Outcome?\"),\n      Patients = colDef(style = remove_text(\"Patients\", nrow(dat)), name = \"Count\", aggregate = \"sum\", align = \"center\"),\n      PercentOfPatients = colDef(style = remove_text(\"Patients\", nrow(dat)), name = \"Percent\", aggregate = \"sum\", align = \"center\", format = colFormat(digits = 2, percent = TRUE)),\n      OutcomeRate = colDef(style = remove_text(\"Patients\", nrow(dat)), name = \"Outcome rate (%)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2, percent = TRUE)),\n      Age = colDef(style = remove_text(\"Patients\", nrow(dat)), name = \"Avg. age (years)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2)),\n      Female = colDef(style = remove_text(\"Patients\", nrow(dat)), name = \"Female (%)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2, percent = TRUE))\n    ),\n  columnGroups = \n    list(\n      colGroup(\n        name = \"Patients\",\n        columns = c(\"Patients\", \"PercentOfPatients\")\n      )\n    ),\n  striped = TRUE,\n  highlight = TRUE,\n  bordered = TRUE,\n  resizable = TRUE,\n  theme = reactablefmtr::sandstone()\n) |>\n  reactablefmtr::add_source(\"Use arrows to expand table\", font_size = 12, font_style = \"italic\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-f2b27ae6d30b4fc23737\" style=\"width:auto;height:auto;\"></div>\n<p style=\"color:#000;background:#FFFFFF;text-align:left;font-size:12px;font-style:italic;font-weight:normal;text-decoration:;letter-spacing:px;word-spacing:px;text-transform:;text-shadow:;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">Use arrows to expand table</p>\n<script type=\"application/json\" data-for=\"htmlwidget-f2b27ae6d30b4fc23737\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Outcome\":[\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\"],\"ClinicalFactor\":[\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\"],\"Level\":[\"No\",\"No\",\"Yes\",\"Yes\",\"Asymptomatic\",\"Asymptomatic\",\"Atypical angina\",\"Atypical angina\",\"Non-anginal pain\",\"Non-anginal pain\",\"Typical angina\",\"Typical angina\",\"No\",\"No\",\"Yes\",\"Yes\",\"No\",\"No\",\"Yes\",\"Yes\",\"Asymptomatic\",\"Asymptomatic\",\"Atypical angina\",\"Atypical angina\",\"Non-anginal pain\",\"Non-anginal pain\",\"Typical angina\",\"Typical angina\",\"No\",\"No\",\"Yes\",\"Yes\"],\"HasOutcome\":[\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\"],\"Patients\":[141,117,23,22,39,105,41,9,68,18,16,7,141,63,23,76,117,141,22,23,92,52,9,41,29,57,9,14,66,138,73,26],\"PercentOfPatients\":[0.465346534653465,0.386138613861386,0.0759075907590759,0.0726072607260726,0.128712871287129,0.346534653465347,0.135313531353135,0.0297029702970297,0.224422442244224,0.0594059405940594,0.0528052805280528,0.0231023102310231,0.465346534653465,0.207920792079208,0.0759075907590759,0.250825082508251,0.386138613861386,0.465346534653465,0.0726072607260726,0.0759075907590759,0.303630363036304,0.171617161716172,0.0297029702970297,0.135313531353135,0.0957095709570957,0.188118811881188,0.0297029702970297,0.0462046204620462,0.217821782178218,0.455445544554455,0.240924092409241,0.0858085808580858],\"OutcomeRate\":[0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],\"Age\":[52,56.3931623931624,56.1739130434783,57.8636363636364,54.0769230769231,56.3333333333333,50.0243902439024,57.4444444444444,52.4264705882353,58.5,56.1875,55.1428571428571,52.4184397163121,57.0952380952381,53.6086956521739,56.2368421052632,57.0769230769231,51.4326241134752,58.6363636363636,55.4347826086956,56.6086956521739,54.1538461538462,59.4444444444444,49.5853658536585,58.2068965517241,51.4035087719298,59.6666666666667,53.4285714285714,58.2121212121212,51.7826086956522,56.5205479452055,53.1153846153846],\"Female\":[0.468085106382979,0.162393162393162,0.260869565217391,0.272727272727273,0.461538461538462,0.20952380952381,0.390243902439024,0.222222222222222,0.5,0.0555555555555556,0.25,0,0.453900709219858,0.174603174603175,0.347826086956522,0.184210526315789,0.256410256410256,0.390070921985816,0.272727272727273,0.260869565217391,0.228260869565217,0.365384615384615,0.222222222222222,0.390243902439024,0.413793103448276,0.403508771929825,0.111111111111111,0.214285714285714,0.363636363636364,0.369565217391304,0.164383561643836,0.384615384615385]},\"columns\":[{\"id\":\"Outcome\",\"name\":\"Outcome\",\"type\":\"character\"},{\"id\":\"ClinicalFactor\",\"name\":\"Clinical factor\",\"type\":\"character\"},{\"id\":\"Level\",\"name\":\"Level\",\"type\":\"character\"},{\"id\":\"HasOutcome\",\"name\":\"Has Outcome?\",\"type\":\"character\"},{\"id\":\"Patients\",\"name\":\"Count\",\"type\":\"numeric\",\"aggregate\":\"sum\",\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 303) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"PercentOfPatients\",\"name\":\"Percent\",\"type\":\"numeric\",\"aggregate\":\"sum\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 303) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"OutcomeRate\",\"name\":\"Outcome rate (%)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 303) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"Age\",\"name\":\"Avg. age (years)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2},\"aggregated\":{\"digits\":2}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 303) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"Female\",\"name\":\"Female (%)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 303) {\\n            return {fontSize:0}\\n          }\\n        }\"}],\"columnGroups\":[{\"name\":\"Patients\",\"columns\":[\"Patients\",\"PercentOfPatients\"]}],\"groupBy\":[\"Outcome\",\"ClinicalFactor\",\"Level\"],\"resizable\":true,\"highlight\":true,\"bordered\":true,\"striped\":true,\"theme\":{\"color\":\"#3e3f3a\",\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#f8f5f0\",\"borderWidth\":\"1px\",\"stripedColor\":\"#ededed\",\"highlightColor\":\"#f8f5f0\",\"cellPadding\":6,\"tableStyle\":{\"fontSize\":15},\"headerStyle\":{\"borderWidth\":\"2px\",\"backgroundColor\":\"#f8f5f0\",\"color\":\"#7c7a78\",\"transitionDuration\":\"0.5s\",\"&:hover[aria-sort]\":{\"color\":\"#000000\"},\"&[aria-sort='ascending'], &[aria-sort='descending']\":{\"color\":\"#000000\"},\"fontSize\":16},\"groupHeaderStyle\":{\"&:not(:empty)\":{\"color\":\"#3e3f3a\",\"fontSize\":16},\"&:hover\":{\"fontWeight\":\"bold\",\"transitionDuration\":\"1s\",\"transitionTimingFunction\":\"ease-out\",\"color\":\"#000000\"}},\"rowSelectedStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"inputStyle\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#bcbfc1\",\"color\":\"#3e3f3a\"},\"searchInputStyle\":{\"backgroundColor\":\"#ffffff\",\"color\":\"#3e3f3a\",\"borderColor\":\"#bcbfc1\",\"&:focus\":{\"color\":\"#3e3f3a\"}},\"selectStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\",\"borderColor\":\"#ffffff\",\"outlineColor\":\"#ffffff\"},\"pageButtonStyle\":{\"backgroundColor\":\"#f8f5f0\",\"color\":\"#8e8c84\",\"&:hover\":{\"backgroundColor\":\"#f3969a\",\"color\":\"#8e8c84\"}},\"pageButtonHoverStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"pageButtonActiveStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"pageButtonCurrentStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"}},\"dataKey\":\"edf7478aaef4de899096f5154e62a4e6\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.attribs.columns.4.style\",\"tag.attribs.columns.5.style\",\"tag.attribs.columns.6.aggregate\",\"tag.attribs.columns.6.style\",\"tag.attribs.columns.7.aggregate\",\"tag.attribs.columns.7.style\",\"tag.attribs.columns.8.aggregate\",\"tag.attribs.columns.8.style\"],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n<br>\n\nIf we want to remove text from the second level of aggregation, we can just adjust the `threshold`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreactable(\n  data = summary_dat,\n  groupBy = c(\"Outcome\", \"ClinicalFactor\", \"Level\"),\n  columns = \n    list(\n      ClinicalFactor = colDef(name = \"Clinical factor\"),\n      HasOutcome = colDef(name = \"Has Outcome?\"),\n      Patients = colDef(style = remove_text(\"Patients\", nrow(dat) - 1), name = \"Count\", aggregate = \"sum\", align = \"center\"),\n      PercentOfPatients = colDef(style = remove_text(\"Patients\", nrow(dat) - 1), name = \"Percent\", aggregate = \"sum\", align = \"center\", format = colFormat(digits = 2, percent = TRUE)),\n      OutcomeRate = colDef(style = remove_text(\"Patients\", nrow(dat) - 1), name = \"Outcome rate (%)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2, percent = TRUE)),\n      Age = colDef(style = remove_text(\"Patients\", nrow(dat) - 1), name = \"Avg. age (years)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2)),\n      Female = colDef(style = remove_text(\"Patients\", nrow(dat) - 1), name = \"Female (%)\", aggregate = zildge::rectbl_agg_wtd(\"Patients\"), align = \"center\", format = colFormat(digits = 2, percent = TRUE))\n    ),\n  columnGroups = \n    list(\n      colGroup(\n        name = \"Patients\",\n        columns = c(\"Patients\", \"PercentOfPatients\")\n      )\n    ),\n  striped = TRUE,\n  highlight = TRUE,\n  bordered = TRUE,\n  resizable = TRUE,\n  theme = reactablefmtr::sandstone()\n) |>\n  reactablefmtr::add_source(\"Use arrows to expand table\", font_size = 12, font_style = \"italic\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-5f51993d07eb42406f25\" style=\"width:auto;height:auto;\"></div>\n<p style=\"color:#000;background:#FFFFFF;text-align:left;font-size:12px;font-style:italic;font-weight:normal;text-decoration:;letter-spacing:px;word-spacing:px;text-transform:;text-shadow:;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px\">Use arrows to expand table</p>\n<script type=\"application/json\" data-for=\"htmlwidget-5f51993d07eb42406f25\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Outcome\":[\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Heart disease\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\",\"Maximum HR > 150\"],\"ClinicalFactor\":[\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Blood sugar > 120 mg/dl?\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Chest pain type\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\",\"Exercise-induced angina?\"],\"Level\":[\"No\",\"No\",\"Yes\",\"Yes\",\"Asymptomatic\",\"Asymptomatic\",\"Atypical angina\",\"Atypical angina\",\"Non-anginal pain\",\"Non-anginal pain\",\"Typical angina\",\"Typical angina\",\"No\",\"No\",\"Yes\",\"Yes\",\"No\",\"No\",\"Yes\",\"Yes\",\"Asymptomatic\",\"Asymptomatic\",\"Atypical angina\",\"Atypical angina\",\"Non-anginal pain\",\"Non-anginal pain\",\"Typical angina\",\"Typical angina\",\"No\",\"No\",\"Yes\",\"Yes\"],\"HasOutcome\":[\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\",\"No\",\"Yes\"],\"Patients\":[141,117,23,22,39,105,41,9,68,18,16,7,141,63,23,76,117,141,22,23,92,52,9,41,29,57,9,14,66,138,73,26],\"PercentOfPatients\":[0.465346534653465,0.386138613861386,0.0759075907590759,0.0726072607260726,0.128712871287129,0.346534653465347,0.135313531353135,0.0297029702970297,0.224422442244224,0.0594059405940594,0.0528052805280528,0.0231023102310231,0.465346534653465,0.207920792079208,0.0759075907590759,0.250825082508251,0.386138613861386,0.465346534653465,0.0726072607260726,0.0759075907590759,0.303630363036304,0.171617161716172,0.0297029702970297,0.135313531353135,0.0957095709570957,0.188118811881188,0.0297029702970297,0.0462046204620462,0.217821782178218,0.455445544554455,0.240924092409241,0.0858085808580858],\"OutcomeRate\":[0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],\"Age\":[52,56.3931623931624,56.1739130434783,57.8636363636364,54.0769230769231,56.3333333333333,50.0243902439024,57.4444444444444,52.4264705882353,58.5,56.1875,55.1428571428571,52.4184397163121,57.0952380952381,53.6086956521739,56.2368421052632,57.0769230769231,51.4326241134752,58.6363636363636,55.4347826086956,56.6086956521739,54.1538461538462,59.4444444444444,49.5853658536585,58.2068965517241,51.4035087719298,59.6666666666667,53.4285714285714,58.2121212121212,51.7826086956522,56.5205479452055,53.1153846153846],\"Female\":[0.468085106382979,0.162393162393162,0.260869565217391,0.272727272727273,0.461538461538462,0.20952380952381,0.390243902439024,0.222222222222222,0.5,0.0555555555555556,0.25,0,0.453900709219858,0.174603174603175,0.347826086956522,0.184210526315789,0.256410256410256,0.390070921985816,0.272727272727273,0.260869565217391,0.228260869565217,0.365384615384615,0.222222222222222,0.390243902439024,0.413793103448276,0.403508771929825,0.111111111111111,0.214285714285714,0.363636363636364,0.369565217391304,0.164383561643836,0.384615384615385]},\"columns\":[{\"id\":\"Outcome\",\"name\":\"Outcome\",\"type\":\"character\"},{\"id\":\"ClinicalFactor\",\"name\":\"Clinical factor\",\"type\":\"character\"},{\"id\":\"Level\",\"name\":\"Level\",\"type\":\"character\"},{\"id\":\"HasOutcome\",\"name\":\"Has Outcome?\",\"type\":\"character\"},{\"id\":\"Patients\",\"name\":\"Count\",\"type\":\"numeric\",\"aggregate\":\"sum\",\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 302) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"PercentOfPatients\",\"name\":\"Percent\",\"type\":\"numeric\",\"aggregate\":\"sum\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 302) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"OutcomeRate\",\"name\":\"Outcome rate (%)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 302) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"Age\",\"name\":\"Avg. age (years)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2},\"aggregated\":{\"digits\":2}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 302) {\\n            return {fontSize:0}\\n          }\\n        }\"},{\"id\":\"Female\",\"name\":\"Female (%)\",\"type\":\"numeric\",\"aggregate\":\"function(values, rows) {\\n            var numerator = 0\\n            var denominator = 0\\n\\n            rows.forEach(function(row, index) {\\n                numerator += row['Patients'] * values[index]\\n                denominator += row['Patients']\\n            })\\n\\n            if('mean' == 'mean') {\\n                return numerator / denominator\\n            } else {\\n                return numerator\\n            }\\n        }\",\"format\":{\"cell\":{\"digits\":2,\"percent\":true},\"aggregated\":{\"digits\":2,\"percent\":true}},\"align\":\"center\",\"style\":\"function(rowInfo) {\\n          if(rowInfo.row['Patients'] > 302) {\\n            return {fontSize:0}\\n          }\\n        }\"}],\"columnGroups\":[{\"name\":\"Patients\",\"columns\":[\"Patients\",\"PercentOfPatients\"]}],\"groupBy\":[\"Outcome\",\"ClinicalFactor\",\"Level\"],\"resizable\":true,\"highlight\":true,\"bordered\":true,\"striped\":true,\"theme\":{\"color\":\"#3e3f3a\",\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#f8f5f0\",\"borderWidth\":\"1px\",\"stripedColor\":\"#ededed\",\"highlightColor\":\"#f8f5f0\",\"cellPadding\":6,\"tableStyle\":{\"fontSize\":15},\"headerStyle\":{\"borderWidth\":\"2px\",\"backgroundColor\":\"#f8f5f0\",\"color\":\"#7c7a78\",\"transitionDuration\":\"0.5s\",\"&:hover[aria-sort]\":{\"color\":\"#000000\"},\"&[aria-sort='ascending'], &[aria-sort='descending']\":{\"color\":\"#000000\"},\"fontSize\":16},\"groupHeaderStyle\":{\"&:not(:empty)\":{\"color\":\"#3e3f3a\",\"fontSize\":16},\"&:hover\":{\"fontWeight\":\"bold\",\"transitionDuration\":\"1s\",\"transitionTimingFunction\":\"ease-out\",\"color\":\"#000000\"}},\"rowSelectedStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"inputStyle\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#bcbfc1\",\"color\":\"#3e3f3a\"},\"searchInputStyle\":{\"backgroundColor\":\"#ffffff\",\"color\":\"#3e3f3a\",\"borderColor\":\"#bcbfc1\",\"&:focus\":{\"color\":\"#3e3f3a\"}},\"selectStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\",\"borderColor\":\"#ffffff\",\"outlineColor\":\"#ffffff\"},\"pageButtonStyle\":{\"backgroundColor\":\"#f8f5f0\",\"color\":\"#8e8c84\",\"&:hover\":{\"backgroundColor\":\"#f3969a\",\"color\":\"#8e8c84\"}},\"pageButtonHoverStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"pageButtonActiveStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"},\"pageButtonCurrentStyle\":{\"backgroundColor\":\"#dfd7ca\",\"color\":\"#8e8c84\"}},\"dataKey\":\"5d25476238b69669768efc4e544b1ea3\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.attribs.columns.4.style\",\"tag.attribs.columns.5.style\",\"tag.attribs.columns.6.aggregate\",\"tag.attribs.columns.6.style\",\"tag.attribs.columns.7.aggregate\",\"tag.attribs.columns.7.style\",\"tag.attribs.columns.8.aggregate\",\"tag.attribs.columns.8.style\"],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n<br>\n\nAnd that's it.\n\nI'll acknowledge that I didn't exhaust all options for this task and that there are _definitely_ better ways to do this with more directed intention by accessing various properties of the table. Obviously this only works if you have a column in the table that only increases during the aggregation and does so to predictable amounts. But it did the trick here.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../../site_libs/reactwidget-2.0.0/react-tools.umd.cjs\"></script>\n<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}